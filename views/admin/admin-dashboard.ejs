<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Admin Dashboard</title>
  <!-- Font Awesome for Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <!-- Google Fonts (Poppins) -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
</head>
<body>
  <div class="admin-wrapper">
    <!-- Custom Admin Header -->
    <header class="admin-header">
      <div class="header-content">
        <div class="header-logo-title">
          <img src="/img/nlp-kd-logo.png" alt="NLP KD Logo" class="header-logo">
          <h1 class="header-title">Admin Dashboard</h1>
        </div>
        <div class="user-profile-container">
          <div class="user-profile dropdown-toggle" onclick="toggleUserDropdown(event)">
            <div class="avatar">üë§</div>
            <span class="username">Admin User</span>
            <i class="fas fa-chevron-down dropdown-arrow"></i>
          </div>
          <div class="user-dropdown-menu" id="user-dropdown">
            <a href="#" class="menu-item sub-item" data-action="profile" onclick="handleUserAction('profile', 'Profile', event)">
              <i class="fas fa-user menu-icon"></i>
              Profile
            </a>
            <a href="#" class="menu-item sub-item" data-action="logout" onclick="handleUserAction('logout', 'Logout', event)">
              <i class="fas fa-sign-out-alt menu-icon"></i>
              Logout
            </a>
          </div>
        </div>
      </div>
    </header>

    <!-- Main Admin Container -->
    <div class="admin-container">
      <!-- Sidebar Menu -->
      <aside class="sidebar">
        <nav class="sidebar-menu">
          <ul>
            <li class="menu-item-container">
              <a href="#" class="menu-item dropdown-toggle active" data-section="nhan-su" onclick="toggleDropdown('nhan-su', 'Nh√¢n s·ª±', event)">
                <i class="fas fa-users menu-icon"></i>
                Nh√¢n s·ª±
                <i class="fas fa-chevron-down dropdown-arrow"></i>
              </a>
              <div class="dropdown-menu" id="dropdown-nhan-su">
                <a href="#" class="menu-item sub-item active" data-section="nhan-su-ql" onclick="loadSection('nhan-su-ql', 'Qu·∫£n l√Ω nh√¢n s·ª±', event)">
                  <i class="fas fa-user-tie menu-icon"></i>
                  Qu·∫£n l√Ω nh√¢n s·ª±
                </a>
                <a href="#" class="menu-item sub-item" data-section="nhan-su-ttsinh" onclick="loadSection('nhan-su-ttsinh', 'Qu·∫£n l√Ω th·ª±c t·∫≠p sinh', event)">
                  <i class="fas fa-user-graduate menu-icon"></i>
                  Qu·∫£n l√Ω th·ª±c t·∫≠p sinh
                </a>
              </div>
            </li>
            <li>
              <a href="#" class="menu-item" data-section="du-an" onclick="loadSection('du-an', 'D·ª± √°n', event)">
                <i class="fas fa-project-diagram menu-icon"></i>
                D·ª± √°n
              </a>
            </li>
            <li>
              <a href="#" class="menu-item" data-section="publication" onclick="loadSection('publication', 'Publication', event)">
                <i class="fas fa-book menu-icon"></i>
                Publication
              </a>
            </li>
            <li>
              <a href="#" class="menu-item" data-section="tin-tuc" onclick="loadSection('tin-tuc', 'Tin t·ª©c', event)">
                <i class="fas fa-newspaper menu-icon"></i>
                Tin t·ª©c
              </a>
            </li>
            <li>
              <a href="#" class="menu-item" data-section="settings" onclick="loadSection('settings', 'C√†i ƒë·∫∑t', event)">
                <i class="fas fa-cog menu-icon"></i>
                C√†i ƒë·∫∑t
              </a>
            </li>
          </ul>
        </nav>
      </aside>

      <!-- Main Content -->
      <main class="main-content">
        <div class="content-header">
          <h1 id="content-title">Qu·∫£n l√Ω nh√¢n s·ª±</h1>
        </div>
        <div class="content-body" id="content-body">
          <div class="dashboard-section personnel-list">
            <table>
              <thead>
                <tr>
                  <th>Avatar</th>
                  <th>Full Name</th>
                  <th>Role</th>
                  <th>Job Titles</th>
                  <th>Degree</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody id="personnel-table-body"></tbody>
            </table>
            <div id="personnel-error" class="error-message" style="display: none; color: red;"></div>
          </div>
        </div>
      </main>
    </div>
  </div>

  <!-- Include Admin Chatbot -->
  <%- include('admin-chatbot') %>

  <style>
    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
      font-family: 'Poppins', sans-serif;
    }

    .admin-wrapper {
      display: flex;
      flex-direction: column;
      height: 100vh;
      width: 100%;
      overflow: hidden;
    }

    /* Custom Admin Header */
    .admin-header {
      background: linear-gradient(135deg, #1A76D1, #00C4B4);
      color: white;
      padding: 15px 20px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 1000;
    }
    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
      max-width: 1200px;
      margin: 0 auto;
    }
    .header-logo-title {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .header-logo {
      max-height: 40px;
      width: auto;
      object-fit: contain;
    }
    .header-title {
      font-size: 20px;
      font-weight: 600;
    }
    .user-profile-container {
      position: relative;
    }
    .user-profile {
      display: flex;
      align-items: center;
      gap: 10px;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    .user-profile:hover {
      background: rgba(255, 255, 255, 0.2);
      border-radius: 15px;
      padding: 5px 10px;
    }
    .user-profile .avatar {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      background: linear-gradient(135deg, #ffffff, #e0e0e0);
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 16px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }
    .user-profile .username {
      font-size: 14px;
      font-weight: 500;
    }
    .user-profile .dropdown-arrow {
      font-size: 12px;
      transition: transform 0.3s ease;
    }
    .user-profile.active .dropdown-arrow {
      transform: rotate(180deg);
    }
    .user-dropdown-menu {
      display: none;
      position: absolute;
      top: 100%;
      right: 0;
      background: linear-gradient(135deg, #1A76D1, #00C4B4);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      border-radius: 5px;
      z-index: 200;
      min-width: 150px;
    }
    .user-dropdown-menu.active {
      display: block;
    }
    .sub-item {
      display: block;
      padding: 10px 20px;
      color: white;
      text-decoration: none;
      font-size: 14px;
      transition: background 0.3s ease, color 0.3s ease;
    }
    .sub-item:hover,
    .sub-item.active {
      background: rgba(255, 255, 255, 0.2);
      color: #ffffff;
    }
    .sub-item:active {
      background: rgba(255, 255, 255, 0.3);
    }
    .sub-item .menu-icon {
      margin-right: 10px;
      font-size: 16px;
      width: 20px;
      text-align: center;
    }

    /* Admin Container (Sidebar + Main Content) */
    .admin-container {
      display: flex;
      flex: 1;
      margin-top: 60px; /* Height of the header */
      height: calc(100vh - 60px);
      overflow: hidden;
    }

    /* Sidebar */
    .sidebar {
      width: 20%;
      background: linear-gradient(135deg, #1A76D1, #00C4B4);
      color: white;
      padding: 20px 0;
      box-shadow: 5px 0 15px rgba(0, 0, 0, 0.2);
      position: relative;
      z-index: 100;
      transition: width 0.3s ease;
    }
    .sidebar-menu ul {
      list-style: none;
      padding: 20px 0;
    }
    .menu-item-container {
      position: relative;
    }
    .menu-item {
      display: flex;
      align-items: center;
      padding: 12px 20px;
      color: white;
      text-decoration: none;
      font-size: 16px;
      transition: background 0.3s ease, color 0.3s ease;
      cursor: pointer;
    }
    .menu-item .menu-icon {
      margin-right: 10px;
      font-size: 18px;
      width: 20px;
      text-align: center;
    }
    .dropdown-toggle {
      position: relative;
    }
    .dropdown-toggle .dropdown-arrow {
      margin-left: auto;
      font-size: 12px;
      transition: transform 0.3s ease;
    }
    .dropdown-toggle.active .dropdown-arrow {
      transform: rotate(180deg);
    }
    .dropdown-menu {
      display: none;
      position: absolute;
      left: 0;
      right: 0;
      background: linear-gradient(135deg, #1A76D1, #00C4B4);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      border-radius: 5px;
      z-index: 200;
    }
    .dropdown-menu.active {
      display: block;
    }

    /* Main Content */
    .main-content {
      width: 80%;
      padding: 20px;
      background: #f5f7fa;
      overflow-y: auto;
    }
    .content-header {
      padding: 10px 0;
      border-bottom: 1px solid #e0e0e0;
      margin-bottom: 20px;
    }
    .content-header h1 {
      font-size: 24px;
      color: #1A76D1;
      font-weight: 600;
    }
    .content-body {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 20px;
    }
    .dashboard-section.personnel-list {
      background: #ffffff;
      padding: 15px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      transition: transform 0.2s ease;
    }
    .dashboard-section.personnel-list:hover {
      transform: translateY(-5px);
    }
    .dashboard-section.personnel-list table {
      width: 100%;
      border-collapse: collapse;
    }
    .dashboard-section.personnel-list th,
    .dashboard-section.personnel-list td {
      padding: 10px;
      text-align: left;
      border-bottom: 1px solid #e0e0e0;
    }
    .dashboard-section.personnel-list th {
      background-color: #f5f7fa;
      font-weight: 600;
    }
    .dashboard-section.personnel-list .avatar-img {
      max-height: 40px;
      width: auto;
      border-radius: 50%;
      object-fit: cover;
    }
    .dashboard-section.personnel-list .actions a {
      margin-right: 10px;
      color: #1A76D1;
      text-decoration: none;
      transition: color 0.3s ease;
    }
    .dashboard-section.personnel-list .actions a:hover {
      color: #00C4B4;
    }
    .error-message {
      margin-top: 10px;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .admin-container {
        flex-direction: column;
        margin-top: 50px; /* Adjusted for smaller header */
        height: calc(100vh - 50px);
      }
      .admin-header {
        padding: 10px 15px;
      }
      .header-logo {
        max-height: 30px; /* Smaller logo on mobile */
      }
      .header-title {
        font-size: 18px;
      }
      .header-logo-title {
        gap: 8px;
      }
      .user-profile {
        flex-direction: column;
        padding: 5px;
      }
      .user-profile .username {
        display: none; /* Hide username on small screens */
      }
      .user-profile .dropdown-arrow {
        margin-top: 5px;
      }
      .user-dropdown-menu {
        position: static;
        width: 100%;
        box-shadow: none;
        border-radius: 0;
      }
      .sidebar {
        width: 100%;
        height: auto;
        padding: 10px 0;
      }
      .sidebar-menu ul {
        display: flex;
        justify-content: space-around;
        padding: 10px 0;
      }
      .menu-item-container {
        position: static;
      }
      .menu-item {
        flex-direction: column;
        padding: 10px;
        font-size: 14px;
        text-align: center;
      }
      .menu-item .menu-icon {
        margin-right: 0;
        margin-bottom: 5px;
        font-size: 16px;
      }
      .dropdown-toggle .dropdown-arrow {
        margin-left: 0;
        margin-top: 5px;
      }
      .dropdown-menu {
        position: static;
        width: 100%;
        box-shadow: none;
        border-radius: 0;
      }
      .sub-item {
        padding: 10px 20px;
        font-size: 12px;
      }
      .main-content {
        width: 100%;
        padding: 15px;
      }
      .dashboard-section.personnel-list table {
        font-size: 14px;
      }
      .dashboard-section.personnel-list th,
      .dashboard-section.personnel-list td {
        padding: 8px;
      }
      .content-body {
        grid-template-columns: 1fr;
      }
    }

    /* Smooth Scroll */
    @media (prefers-reduced-motion: no-preference) {
      html {
        scroll-behavior: smooth;
      }
    }
  </style>

  <script>
    // Placeholder content for each section (simulating server response)
    const sectionContents = {
      'nhan-su-ql': `
        <div class="dashboard-section personnel-list">
          <table>
            <thead>
              <tr>
                <th>Avatar</th>
                <th>Full Name</th>
                <th>Role</th>
                <th>Job Titles</th>
                <th>Degree</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="personnel-table-body"></tbody>
          </table>
          <div id="personnel-error" class="error-message" style="display: none; color: red;"></div>
        </div>
      `,
      'nhan-su-ttsinh': `
        <div class="dashboard-section">
          <h3>Qu·∫£n l√Ω Th·ª±c t·∫≠p sinh</h3>
          <p>Qu·∫£n l√Ω th√¥ng tin th·ª±c t·∫≠p sinh, bao g·ªìm danh s√°ch v√† ti·∫øn ƒë·ªô th·ª±c t·∫≠p.</p>
        </div>
      `,
      'du-an': `
        <div class="dashboard-section">
          <h3>Qu·∫£n l√Ω D·ª± √°n</h3>
          <p>Qu·∫£n l√Ω c√°c d·ª± √°n hi·ªán t·∫°i v√† qu√° kh·ª© v·ªõi chi ti·∫øt v√† ti·∫øn ƒë·ªô.</p>
        </div>
      `,
      'publication': `
        <div class="dashboard-section">
          <h3>Qu·∫£n l√Ω Publication</h3>
          <p>Qu·∫£n l√Ω c√°c b√†i vi·∫øt h·ªçc thu·∫≠t, ·∫•n ph·∫©m ho·∫∑c nghi√™n c·ª©u.</p>
        </div>
      `,
      'tin-tuc': `
        <div class="dashboard-section">
          <h3>Qu·∫£n l√Ω Tin t·ª©c</h3>
          <p>Th√™m, ch·ªânh s·ª≠a ho·∫∑c x√≥a c√°c b√†i vi·∫øt tin t·ª©c.</p>
        </div>
      `,
      'settings': `
        <div class="dashboard-section">
          <h3>C√†i ƒë·∫∑t</h3>
          <p>C·∫•u h√¨nh h·ªá th·ªëng, qu·∫£n l√Ω ng∆∞·ªùi d√πng v√† c√°c thi·∫øt l·∫≠p kh√°c.</p>
        </div>
      `
    };

    let activeDropdown = null;
    let activeUserDropdown = null;

    function toggleDropdown(section, title, event) {
      event.preventDefault();
      const dropdown = document.getElementById(`dropdown-${section}`);
      const isActive = dropdown.classList.contains('active');

      // Close any open dropdown (sidebar or user)
      if (activeDropdown && activeDropdown !== dropdown) {
        activeDropdown.classList.remove('active');
        activeDropdown.closest('.menu-item-container').querySelector('.dropdown-toggle').classList.remove('active');
      }
      if (activeUserDropdown && activeUserDropdown !== dropdown) {
        activeUserDropdown.classList.remove('active');
        document.querySelector('.user-profile').classList.remove('active');
      }

      // Toggle the current dropdown
      dropdown.classList.toggle('active', !isActive);
      event.target.classList.toggle('active', !isActive);
      activeDropdown = isActive ? null : dropdown;

      // If opening and no sub-item is active, load the first sub-item by default
      if (!isActive && !dropdown.querySelector('.sub-item.active')) {
        const firstSubItem = dropdown.querySelector('.sub-item');
        if (firstSubItem) {
          loadSection(firstSubItem.getAttribute('data-section'), firstSubItem.textContent.trim(), { preventDefault: () => {}, target: firstSubItem });
        }
      }
    }

    function toggleUserDropdown(event) {
      event.preventDefault();
      const dropdown = document.getElementById('user-dropdown');
      const isActive = dropdown.classList.contains('active');

      // Close any open dropdown (sidebar or user)
      if (activeDropdown && activeDropdown !== dropdown) {
        activeDropdown.classList.remove('active');
        activeDropdown.closest('.menu-item-container').querySelector('.dropdown-toggle').classList.remove('active');
      }
      if (activeUserDropdown && activeUserDropdown !== dropdown) {
        activeUserDropdown.classList.remove('active');
        document.querySelector('.user-profile').classList.remove('active');
      }

      // Toggle the user dropdown
      dropdown.classList.toggle('active', !isActive);
      document.querySelector('.user-profile').classList.toggle('active', !isActive);
      activeUserDropdown = isActive ? null : dropdown;
    }

    async function loadSection(section, title, event) {
      event.preventDefault();

      // Update active menu item
      document.querySelectorAll('.sidebar-menu .menu-item, .sidebar-menu .sub-item').forEach(item => {
        item.classList.remove('active');
      });
      event.target.classList.add('active');

      // Update content header
      const contentTitle = document.getElementById('content-title');
      contentTitle.textContent = title;

      // Update content body based on section
      const contentBody = document.getElementById('content-body');
      if (section === 'nhan-su-ql') {
        try {
          const response = await fetch('/personnel', {
            method: 'GET',
            headers: { 'X-Requested-With': 'XMLHttpRequest' }
          });
          const data = await response.json();
          if (data.status === 'success') {
            const personnel = data.data.personnel || data.data;
            const tableBody = document.getElementById('personnel-table-body');
            tableBody.innerHTML = '';
            if (personnel.length > 0) {
              personnel.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
                  <td><img src="${user.avatar || '/img/default-avatar.png'}" alt="${user.fullName}" class="avatar-img" onerror="this.src='/img/default-avatar.png';"></td>
                  <td>${user.fullName || 'N/A'}</td>
                  <td>${user.role || 'N/A'}</td>
                  <td>${(user.jobTitles && user.jobTitles.length > 0) ? user.jobTitles.map(t => t.vi || t.en).join(', ') : 'N/A'}</td>
                  <td>${user.degree ? (user.degree.vi || user.degree.en) : 'N/A'}</td>
                  <td class="actions">
                    <a href="#" data-id="${user._id}" class="edit-user"><i class="fas fa-edit"></i></a>
                    <a href="#" data-id="${user._id}" class="delete-user"><i class="fas fa-trash"></i></a>
                  </td>
                `;
                tableBody.appendChild(row);
              });
              // Add event listeners for edit and delete
              document.querySelectorAll('.edit-user').forEach(link => {
                link.addEventListener('click', async (e) => {
                  e.preventDefault();
                  const userId = link.getAttribute('data-id');
                  // Redirect to edit page or open modal (implement as needed)
                  window.location.href = `/edit-user/${userId}`; // Example redirect
                });
              });
              document.querySelectorAll('.delete-user').forEach(link => {
                link.addEventListener('click', async (e) => {
                  e.preventDefault();
                  const userId = link.getAttribute('data-id');
                  if (confirm('Are you sure you want to delete this user?')) {
                    try {
                      const response = await fetch(`/users/${userId}`, {
                        method: 'DELETE',
                        headers: { 'X-Requested-With': 'XMLHttpRequest' }
                      });
                      const result = await response.json();
                      if (result.status === 'success') {
                        loadSection('nhan-su-ql', 'Qu·∫£n l√Ω nh√¢n s·ª±', { preventDefault: () => {}, target: event.target });
                      } else {
                        alert('Failed to delete user: ' + result.message);
                      }
                    } catch (error) {
                      alert('Error deleting user: ' + error.message);
                    }
                  }
                });
              });
            } else {
              document.getElementById('personnel-error').textContent = 'No personnel users found';
              document.getElementById('personnel-error').style.display = 'block';
            }
          } else {
            document.getElementById('personnel-error').textContent = data.message || 'Failed to load personnel data';
            document.getElementById('personnel-error').style.display = 'block';
          }
        } catch (error) {
          document.getElementById('personnel-error').textContent = 'Error fetching personnel data: ' + error.message;
          document.getElementById('personnel-error').style.display = 'block';
        }
      } else {
        contentBody.innerHTML = sectionContents[section] || `
          <div class="dashboard-section">
            <h3>Section Not Found</h3>
            <p>Content for this section is not available.</p>
          </div>
        `;
      }

      // Close any open dropdown if clicking a sub-item
      if (event.target.classList.contains('sub-item')) {
        const dropdown = event.target.closest('.dropdown-menu');
        if (dropdown) {
          dropdown.classList.remove('active');
          dropdown.closest('.menu-item-container').querySelector('.dropdown-toggle').classList.remove('active');
          activeDropdown = null;
        }
      }

      // Scroll to top of content
      document.querySelector('.main-content').scrollTo({ top: 0, behavior: 'smooth' });
    }

    function handleUserAction(action, title, event) {
      event.preventDefault();

      // Close the user dropdown
      const dropdown = document.getElementById('user-dropdown');
      dropdown.classList.remove('active');
      document.querySelector('.user-profile').classList.remove('active');
      activeUserDropdown = null;

      // Handle action
      if (action === 'profile') {
        const contentTitle = document.getElementById('content-title');
        contentTitle.textContent = 'User Profile';
        const contentBody = document.getElementById('content-body');
        contentBody.innerHTML = `
          <div class="dashboard-section">
            <h3>User Profile</h3>
            <p>Xem v√† ch·ªânh s·ª≠a th√¥ng tin c√° nh√¢n c·ªßa b·∫°n.</p>
          </div>
        `;
      } else if (action === 'logout') {
        // Simulate logout (redirect or API call in real app)
        alert('Logging out... (Redirect to login page in real app)');
        // Example: window.location.href = '/login';
      }

      // Scroll to top of content
      document.querySelector('.main-content').scrollTo({ top: 0, behavior: 'smooth' });
    }

    // Load default section on page load
    document.addEventListener('DOMContentLoaded', () => {
      loadSection('nhan-su-ql', 'Qu·∫£n l√Ω nh√¢n s·ª±', { preventDefault: () => {}, target: document.querySelector('.sub-item.active') });
    });
  </script>
</body>
</html>